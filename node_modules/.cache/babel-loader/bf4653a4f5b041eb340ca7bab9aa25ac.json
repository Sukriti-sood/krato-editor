{"ast":null,"code":"/**\r\n * marked - a markdown parser\r\n * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)\r\n * https://github.com/chjj/marked\r\n */\n;\n(function () {\n  if (!React) {\n    var React = require('react');\n  }\n  /**\r\n   * Block-Level Grammar\r\n   */\n\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')(/bull/g, block.bullet)();\n  block.list = replace(block.list)(/bull/g, block.bullet)('hr', /\\n+(?=(?: *[-*_]){3,} *(?:\\n+|$))/)();\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n  block.html = replace(block.html)('comment', /<!--[\\s\\S]*?-->/)('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g, block._tag)();\n  block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', '<' + block._tag)('def', block.def)();\n  /**\r\n   * Normal Block Grammar\r\n   */\n\n  block.normal = merge({}, block);\n  /**\r\n   * GFM Block Grammar\r\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/\n  });\n  block.gfm.paragraph = replace(block.paragraph)('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|')();\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n  /**\r\n   * Block Lexer\r\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n  /**\r\n   * Expose Block Rules\r\n   */\n\n\n  Lexer.rules = block;\n  /**\r\n   * Static Lex Method\r\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\r\n   * Preprocessing\r\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\r\n   * Lexing\r\n   */\n\n\n  Lexer.prototype.token = function (src, top) {\n    var src = src.replace(/^ +$/gm, ''),\n        next,\n        loose,\n        cap,\n        bull,\n        b,\n        item,\n        space,\n        i,\n        l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      } // fences (gfm)\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3]\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        }); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          }); // Recurse.\n\n          this.token(item, false);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n          text: cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      } // table (gfm)\n\n\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\r\n   * Inline-Level Grammar\r\n   */\n\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n  inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)();\n  inline.reflink = replace(inline.reflink)('inside', inline._inside)();\n  /**\r\n   * Normal Inline Grammar\r\n   */\n\n  inline.normal = merge({}, inline);\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n  /**\r\n   * GFM Inline Grammar\r\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)(']|', '~]|')('|', '|https?://|')()\n  });\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n  /**\r\n   * Expose Inline Rules\r\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\r\n   * Lexing/Compiling\r\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = [],\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(cap[1]);\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out.push(this.renderer.link(href, null, text));\n        continue;\n      } // url (gfm)\n\n\n      if (cap = this.rules.url.exec(src)) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out.push(this.renderer.link(href, null, text));\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.options.sanitize ? escape(cap[0]) : cap[0]);\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        }));\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out.push(cap[0].charAt(0));\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        out.push(this.outputLink(cap, link));\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.renderer.strong(this.output(cap[2] || cap[1])));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.renderer.em(this.output(cap[2] || cap[1])));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.renderer.codespan(escape(cap[2], true)));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.renderer.br());\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(this.renderer.del(this.output(cap[1])));\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out.push(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n  /**\r\n   * Compile Link\r\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\r\n   * Smartypants Transformations\r\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/--/g, '\\u2014') // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018') // closing singles & apostrophes\n    .replace(/'/g, '\\u2019') // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c') // closing doubles\n    .replace(/\"/g, '\\u201d') // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n  };\n  /**\r\n   * Mangle Links\r\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    var out = [],\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out.push('&#' + ch + ';');\n    }\n\n    return out;\n  };\n  /**\r\n   * Renderer\r\n   */\n\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return React.DOM.pre(null, React.DOM.code({\n        dangerouslySetInnerHTML: {\n          __html: escaped ? code : escape(code, true)\n        }\n      }));\n    }\n\n    return React.DOM.pre(null, React.DOM.code({\n      className: this.options.langPrefix + escape(lang, true),\n      dangerouslySetInnerHTML: {\n        __html: escaped ? code : escape(code, true)\n      }\n    }));\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return React.DOM.blockquote({\n      children: quote\n    });\n  };\n\n  Renderer.prototype.html = function (html) {\n    return React.DOM.div({\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    });\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return React.DOM['h' + level]({\n      children: text,\n      id: this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    });\n  };\n\n  Renderer.prototype.hr = function () {\n    return React.DOM.hr(null);\n  };\n\n  Renderer.prototype.list = function (body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return React.DOM[type]({\n      childrend: body\n    });\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return React.DOM.li({\n      childrend: text\n    });\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    console.log(text);\n    return React.DOM.p(null, text);\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return React.DOM.table(null, React.DOM.thead({\n      childrend: header\n    }), React.DOM.tbody({\n      childrend: body\n    }));\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return React.DOM.tr({\n      childrend: content\n    });\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var props = {\n      childrend: content\n    };\n\n    if (flags.align) {\n      props.style.textAlign = flags.align;\n    }\n\n    return React.DOM[type](props);\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return React.DOM.strong(null, text);\n  };\n\n  Renderer.prototype.em = function (text) {\n    return React.DOM.em(null, text);\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return React.DOM.code(null, text);\n  };\n\n  Renderer.prototype.br = function () {\n    return React.DOM.br(null);\n  };\n\n  Renderer.prototype.del = function (text) {\n    return React.DOM.del(null, text);\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return React.DOM.a(null);\n      }\n\n      if (prot.indexOf('javascript:') === 0) {\n        return React.DOM.a(null);\n      }\n    }\n\n    return React.DOM.a({\n      href: href,\n      title: title\n    }, text);\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    return React.DOM.img({\n      src: href,\n      title: title,\n      alt: text\n    });\n  };\n  /**\r\n   * Parsing & Compiling\r\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n  /**\r\n   * Static Parse Method\r\n   */\n\n\n  Parser.parse = function (src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n  /**\r\n   * Parse Loop\r\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n    var out = [];\n\n    while (this.next()) {\n      out.push(this.tok());\n    }\n\n    return out;\n  };\n  /**\r\n   * Next Token\r\n   */\n\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n  /**\r\n   * Preview Next Token\r\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\r\n   * Parse Text Tokens\r\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n    console.log(body);\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\r\n   * Parse Current Token\r\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = [],\n              i,\n              row,\n              cell,\n              flags,\n              j; // header\n\n          cell = [];\n\n          for (i = 0; i < this.token.header.length; i++) {\n            flags = {\n              header: true,\n              align: this.token.align[i]\n            };\n            cell.push(this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            }));\n          }\n\n          header.push(this.renderer.tablerow(cell));\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell.push(this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              }));\n            }\n\n            body.push(this.renderer.tablerow(cell));\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          var body = [];\n\n          while (this.next().type !== 'blockquote_end') {\n            body.push(this.tok());\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          var body = [],\n              ordered = this.token.ordered;\n\n          while (this.next().type !== 'list_end') {\n            body.push(this.tok());\n          }\n\n          return this.renderer.list(body, ordered);\n        }\n\n      case 'list_item_start':\n        {\n          var body = [];\n\n          while (this.next().type !== 'list_item_end') {\n            body.push(this.token.type === 'text' ? this.parseText() : this.tok());\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'loose_item_start':\n        {\n          var body = [];\n\n          while (this.next().type !== 'list_item_end') {\n            body.push(this.tok());\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n  /**\r\n   * Helpers\r\n   */\n\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    return html.replace(/&([#\\w]+);/g, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\r\n   * Marked\r\n   */\n\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function () {\n        var out, err;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\r\n   * Options\r\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer()\n  };\n  /**\r\n   * Expose\r\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.parse = marked;\n\n  if (typeof exports === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    this.marked = marked;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","map":{"version":3,"sources":["/home/sukriti/Desktop/krato-editor/node_modules/react-marked/lib/marked.js"],"names":["React","require","block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","list","html","def","table","paragraph","text","bullet","item","replace","_tag","normal","merge","gfm","source","tables","Lexer","options","tokens","links","marked","defaults","rules","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","space","i","l","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","breaks","InlineLexer","renderer","Renderer","output","out","mangle","outputLink","codespan","smartypants","image","ch","Math","random","toString","escaped","highlight","DOM","dangerouslySetInnerHTML","__html","className","langPrefix","quote","children","div","level","raw","id","headerPrefix","body","childrend","listitem","li","console","log","p","thead","tbody","tablerow","content","tr","tablecell","flags","props","style","textAlign","prot","decodeURIComponent","unescape","e","a","img","alt","Parser","parse","parser","reverse","tok","pop","peek","parseText","row","cell","j","encode","_","n","String","fromCharCode","parseInt","regex","opt","self","name","val","obj","target","key","arguments","Object","hasOwnProperty","call","callback","pending","done","err","message","silent","setOptions","inlineLexer","exports","module","define","amd","window","global"],"mappings":"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","sourcesContent":["/**\r\n * marked - a markdown parser\r\n * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)\r\n * https://github.com/chjj/marked\r\n */\r\n\r\n;\r\n(function () {\r\n    if (!React) {\r\n        var React = require('react');\r\n    }\r\n    /**\r\n     * Block-Level Grammar\r\n     */\r\n\r\n    var block = {\r\n        newline:/^\\n+/,\r\n        code:/^( {4}[^\\n]+\\n*)+/,\r\n        fences:noop,\r\n        hr:/^( *[-*_]){3,} *(?:\\n+|$)/,\r\n        heading:/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n        nptable:noop,\r\n        lheading:/^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n        blockquote:/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,\r\n        list:/^( *)(bull) [\\s\\S]+?(?:hr|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n        html:/^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,\r\n        def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n        table:noop,\r\n        paragraph:/^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n        text:/^[^\\n]+/\r\n    };\r\n\r\n    block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n    block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n    block.item = replace(block.item, 'gm')\r\n        (/bull/g, block.bullet)\r\n        ();\r\n\r\n    block.list = replace(block.list)\r\n        (/bull/g, block.bullet)\r\n        ('hr', /\\n+(?=(?: *[-*_]){3,} *(?:\\n+|$))/)\r\n        ();\r\n\r\n    block._tag = '(?!(?:'\r\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n        + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n        + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n    block.html = replace(block.html)\r\n        ('comment', /<!--[\\s\\S]*?-->/)\r\n        ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n        ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n        (/tag/g, block._tag)\r\n        ();\r\n\r\n    block.paragraph = replace(block.paragraph)\r\n        ('hr', block.hr)\r\n        ('heading', block.heading)\r\n        ('lheading', block.lheading)\r\n        ('blockquote', block.blockquote)\r\n        ('tag', '<' + block._tag)\r\n        ('def', block.def)\r\n        ();\r\n\r\n    /**\r\n     * Normal Block Grammar\r\n     */\r\n\r\n    block.normal = merge({}, block);\r\n\r\n    /**\r\n     * GFM Block Grammar\r\n     */\r\n\r\n    block.gfm = merge({}, block.normal, {\r\n        fences:/^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n        paragraph:/^/\r\n    });\r\n\r\n    block.gfm.paragraph = replace(block.paragraph)\r\n        ('(?!', '(?!'\r\n            + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n            + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n        ();\r\n\r\n    /**\r\n     * GFM + Tables Block Grammar\r\n     */\r\n\r\n    block.tables = merge({}, block.gfm, {\r\n        nptable:/^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n        table:/^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n    });\r\n\r\n    /**\r\n     * Block Lexer\r\n     */\r\n\r\n    function Lexer(options) {\r\n        this.tokens = [];\r\n        this.tokens.links = {};\r\n        this.options = options || marked.defaults;\r\n        this.rules = block.normal;\r\n\r\n        if (this.options.gfm) {\r\n            if (this.options.tables) {\r\n                this.rules = block.tables;\r\n            } else {\r\n                this.rules = block.gfm;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Expose Block Rules\r\n     */\r\n\r\n    Lexer.rules = block;\r\n\r\n    /**\r\n     * Static Lex Method\r\n     */\r\n\r\n    Lexer.lex = function (src, options) {\r\n        var lexer = new Lexer(options);\r\n        return lexer.lex(src);\r\n    };\r\n\r\n    /**\r\n     * Preprocessing\r\n     */\r\n\r\n    Lexer.prototype.lex = function (src) {\r\n        src = src\r\n            .replace(/\\r\\n|\\r/g, '\\n')\r\n            .replace(/\\t/g, '    ')\r\n            .replace(/\\u00a0/g, ' ')\r\n            .replace(/\\u2424/g, '\\n');\r\n\r\n        return this.token(src, true);\r\n    };\r\n\r\n    /**\r\n     * Lexing\r\n     */\r\n\r\n    Lexer.prototype.token = function (src, top) {\r\n        var src = src.replace(/^ +$/gm, '')\r\n            , next\r\n            , loose\r\n            , cap\r\n            , bull\r\n            , b\r\n            , item\r\n            , space\r\n            , i\r\n            , l;\r\n\r\n        while (src) {\r\n            // newline\r\n            if (cap = this.rules.newline.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                if (cap[0].length > 1) {\r\n                    this.tokens.push({\r\n                        type:'space'\r\n                    });\r\n                }\r\n            }\r\n\r\n            // code\r\n            if (cap = this.rules.code.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                cap = cap[0].replace(/^ {4}/gm, '');\r\n                this.tokens.push({\r\n                    type:'code',\r\n                    text:!this.options.pedantic\r\n                        ? cap.replace(/\\n+$/, '')\r\n                        : cap\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // fences (gfm)\r\n            if (cap = this.rules.fences.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'code',\r\n                    lang:cap[2],\r\n                    text:cap[3]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // heading\r\n            if (cap = this.rules.heading.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'heading',\r\n                    depth:cap[1].length,\r\n                    text:cap[2]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // table no leading pipe (gfm)\r\n            if (top && (cap = this.rules.nptable.exec(src))) {\r\n                src = src.substring(cap[0].length);\r\n\r\n                item = {\r\n                    type:'table',\r\n                    header:cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n                    align:cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n                    cells:cap[3].replace(/\\n$/, '').split('\\n')\r\n                };\r\n\r\n                for (i = 0; i < item.align.length; i++) {\r\n                    if (/^ *-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'right';\r\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'center';\r\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n                        item.align[i] = 'left';\r\n                    } else {\r\n                        item.align[i] = null;\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < item.cells.length; i++) {\r\n                    item.cells[i] = item.cells[i].split(/ *\\| */);\r\n                }\r\n\r\n                this.tokens.push(item);\r\n\r\n                continue;\r\n            }\r\n\r\n            // lheading\r\n            if (cap = this.rules.lheading.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'heading',\r\n                    depth:cap[2] === '=' ? 1 : 2,\r\n                    text:cap[1]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // hr\r\n            if (cap = this.rules.hr.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'hr'\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // blockquote\r\n            if (cap = this.rules.blockquote.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n\r\n                this.tokens.push({\r\n                    type:'blockquote_start'\r\n                });\r\n\r\n                cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n                // Pass `top` to keep the current\r\n                // \"toplevel\" state. This is exactly\r\n                // how markdown.pl works.\r\n                this.token(cap, top);\r\n\r\n                this.tokens.push({\r\n                    type:'blockquote_end'\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            // list\r\n            if (cap = this.rules.list.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                bull = cap[2];\r\n\r\n                this.tokens.push({\r\n                    type:'list_start',\r\n                    ordered:bull.length > 1\r\n                });\r\n\r\n                // Get each top-level item.\r\n                cap = cap[0].match(this.rules.item);\r\n\r\n                next = false;\r\n                l = cap.length;\r\n                i = 0;\r\n\r\n                for (; i < l; i++) {\r\n                    item = cap[i];\r\n\r\n                    // Remove the list item's bullet\r\n                    // so it is seen as the next token.\r\n                    space = item.length;\r\n                    item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n                    // Outdent whatever the\r\n                    // list item contains. Hacky.\r\n                    if (~item.indexOf('\\n ')) {\r\n                        space -= item.length;\r\n                        item = !this.options.pedantic\r\n                            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n                            : item.replace(/^ {1,4}/gm, '');\r\n                    }\r\n\r\n                    // Determine whether the next list item belongs here.\r\n                    // Backpedal if it does not belong in this list.\r\n                    if (this.options.smartLists && i !== l - 1) {\r\n                        b = block.bullet.exec(cap[i + 1])[0];\r\n                        if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n                            src = cap.slice(i + 1).join('\\n') + src;\r\n                            i = l - 1;\r\n                        }\r\n                    }\r\n\r\n                    // Determine whether item is loose or not.\r\n                    // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n                    // for discount behavior.\r\n                    loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n                    if (i !== l - 1) {\r\n                        next = item.charAt(item.length - 1) === '\\n';\r\n                        if (!loose) loose = next;\r\n                    }\r\n\r\n                    this.tokens.push({\r\n                        type:loose\r\n                            ? 'loose_item_start'\r\n                            : 'list_item_start'\r\n                    });\r\n\r\n                    // Recurse.\r\n                    this.token(item, false);\r\n\r\n                    this.tokens.push({\r\n                        type:'list_item_end'\r\n                    });\r\n                }\r\n\r\n                this.tokens.push({\r\n                    type:'list_end'\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            // html\r\n            if (cap = this.rules.html.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:this.options.sanitize\r\n                        ? 'paragraph'\r\n                        : 'html',\r\n                    pre:cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n                    text:cap[0]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // def\r\n            if (top && (cap = this.rules.def.exec(src))) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.links[cap[1].toLowerCase()] = {\r\n                    href:cap[2],\r\n                    title:cap[3]\r\n                };\r\n                continue;\r\n            }\r\n\r\n            // table (gfm)\r\n            if (top && (cap = this.rules.table.exec(src))) {\r\n                src = src.substring(cap[0].length);\r\n\r\n                item = {\r\n                    type:'table',\r\n                    header:cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n                    align:cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n                    cells:cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n                };\r\n\r\n                for (i = 0; i < item.align.length; i++) {\r\n                    if (/^ *-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'right';\r\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n                        item.align[i] = 'center';\r\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n                        item.align[i] = 'left';\r\n                    } else {\r\n                        item.align[i] = null;\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < item.cells.length; i++) {\r\n                    item.cells[i] = item.cells[i]\r\n                        .replace(/^ *\\| *| *\\| *$/g, '')\r\n                        .split(/ *\\| */);\r\n                }\r\n\r\n                this.tokens.push(item);\r\n\r\n                continue;\r\n            }\r\n\r\n            // top-level paragraph\r\n            if (top && (cap = this.rules.paragraph.exec(src))) {\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'paragraph',\r\n                    text:cap[1].charAt(cap[1].length - 1) === '\\n'\r\n                        ? cap[1].slice(0, -1)\r\n                        : cap[1]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            // text\r\n            if (cap = this.rules.text.exec(src)) {\r\n                // Top-level should never reach here.\r\n                src = src.substring(cap[0].length);\r\n                this.tokens.push({\r\n                    type:'text',\r\n                    text:cap[0]\r\n                });\r\n                continue;\r\n            }\r\n\r\n            if (src) {\r\n                throw new\r\n                    Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n            }\r\n        }\r\n\r\n        return this.tokens;\r\n    };\r\n\r\n    /**\r\n     * Inline-Level Grammar\r\n     */\r\n\r\n    var inline = {\r\n        escape:/^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n        autolink:/^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n        url:noop,\r\n        tag:/^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n        link:/^!?\\[(inside)\\]\\(href\\)/,\r\n        reflink:/^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n        nolink:/^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n        strong:/^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n        em:/^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n        code:/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n        br:/^ {2,}\\n(?!\\s*$)/,\r\n        del:noop,\r\n        text:/^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n    };\r\n\r\n    inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n    inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n    inline.link = replace(inline.link)\r\n        ('inside', inline._inside)\r\n        ('href', inline._href)\r\n        ();\r\n\r\n    inline.reflink = replace(inline.reflink)\r\n        ('inside', inline._inside)\r\n        ();\r\n\r\n    /**\r\n     * Normal Inline Grammar\r\n     */\r\n\r\n    inline.normal = merge({}, inline);\r\n\r\n    /**\r\n     * Pedantic Inline Grammar\r\n     */\r\n\r\n    inline.pedantic = merge({}, inline.normal, {\r\n        strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n        em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n    });\r\n\r\n    /**\r\n     * GFM Inline Grammar\r\n     */\r\n\r\n    inline.gfm = merge({}, inline.normal, {\r\n        escape:replace(inline.escape)('])', '~|])')(),\r\n        url:/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n        del:/^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n        text:replace(inline.text)\r\n            (']|', '~]|')\r\n            ('|', '|https?://|')\r\n            ()\r\n    });\r\n\r\n    /**\r\n     * GFM + Line Breaks Inline Grammar\r\n     */\r\n\r\n    inline.breaks = merge({}, inline.gfm, {\r\n        br:replace(inline.br)('{2,}', '*')(),\r\n        text:replace(inline.gfm.text)('{2,}', '*')()\r\n    });\r\n\r\n    /**\r\n     * Inline Lexer & Compiler\r\n     */\r\n\r\n    function InlineLexer(links, options) {\r\n        this.options = options || marked.defaults;\r\n        this.links = links;\r\n        this.rules = inline.normal;\r\n        this.renderer = this.options.renderer || new Renderer;\r\n        this.renderer.options = this.options;\r\n\r\n        if (!this.links) {\r\n            throw new\r\n                Error('Tokens array requires a `links` property.');\r\n        }\r\n\r\n        if (this.options.gfm) {\r\n            if (this.options.breaks) {\r\n                this.rules = inline.breaks;\r\n            } else {\r\n                this.rules = inline.gfm;\r\n            }\r\n        } else if (this.options.pedantic) {\r\n            this.rules = inline.pedantic;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Expose Inline Rules\r\n     */\r\n\r\n    InlineLexer.rules = inline;\r\n\r\n    /**\r\n     * Static Lexing/Compiling Method\r\n     */\r\n\r\n    InlineLexer.output = function (src, links, options) {\r\n        var inline = new InlineLexer(links, options);\r\n        return inline.output(src);\r\n    };\r\n\r\n    /**\r\n     * Lexing/Compiling\r\n     */\r\n\r\n    InlineLexer.prototype.output = function (src) {\r\n        var out = []\r\n            , link\r\n            , text\r\n            , href\r\n            , cap;\r\n\r\n        while (src) {\r\n            // escape\r\n            if (cap = this.rules.escape.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(cap[1]);\r\n                continue;\r\n            }\r\n\r\n            // autolink\r\n            if (cap = this.rules.autolink.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                if (cap[2] === '@') {\r\n                    text = cap[1].charAt(6) === ':'\r\n                        ? this.mangle(cap[1].substring(7))\r\n                        : this.mangle(cap[1]);\r\n                    href = this.mangle('mailto:') + text;\r\n                } else {\r\n                    text = escape(cap[1]);\r\n                    href = text;\r\n                }\r\n                out.push(this.renderer.link(href, null, text));\r\n                continue;\r\n            }\r\n\r\n            // url (gfm)\r\n            if (cap = this.rules.url.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                text = escape(cap[1]);\r\n                href = text;\r\n                out.push(this.renderer.link(href, null, text));\r\n                continue;\r\n            }\r\n\r\n            // tag\r\n            if (cap = this.rules.tag.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.options.sanitize\r\n                    ? escape(cap[0])\r\n                    : cap[0]);\r\n                continue;\r\n            }\r\n\r\n            // link\r\n            if (cap = this.rules.link.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.outputLink(cap, {\r\n                    href:cap[2],\r\n                    title:cap[3]\r\n                }));\r\n                continue;\r\n            }\r\n\r\n            // reflink, nolink\r\n            if ((cap = this.rules.reflink.exec(src))\r\n                || (cap = this.rules.nolink.exec(src))) {\r\n                src = src.substring(cap[0].length);\r\n                link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n                link = this.links[link.toLowerCase()];\r\n                if (!link || !link.href) {\r\n                    out.push(cap[0].charAt(0));\r\n                    src = cap[0].substring(1) + src;\r\n                    continue;\r\n                }\r\n                out.push(this.outputLink(cap, link));\r\n                continue;\r\n            }\r\n\r\n            // strong\r\n            if (cap = this.rules.strong.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.renderer.strong(this.output(cap[2] || cap[1])));\r\n                continue;\r\n            }\r\n\r\n            // em\r\n            if (cap = this.rules.em.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.renderer.em(this.output(cap[2] || cap[1])));\r\n                continue;\r\n            }\r\n\r\n            // code\r\n            if (cap = this.rules.code.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.renderer.codespan(escape(cap[2], true)));\r\n                continue;\r\n            }\r\n\r\n            // br\r\n            if (cap = this.rules.br.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.renderer.br());\r\n                continue;\r\n            }\r\n\r\n            // del (gfm)\r\n            if (cap = this.rules.del.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(this.renderer.del(this.output(cap[1])));\r\n                continue;\r\n            }\r\n\r\n            // text\r\n            if (cap = this.rules.text.exec(src)) {\r\n                src = src.substring(cap[0].length);\r\n                out.push(escape(this.smartypants(cap[0])));\r\n                continue;\r\n            }\r\n\r\n            if (src) {\r\n                throw new\r\n                    Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    /**\r\n     * Compile Link\r\n     */\r\n\r\n    InlineLexer.prototype.outputLink = function (cap, link) {\r\n        var href = escape(link.href)\r\n            , title = link.title ? escape(link.title) : null;\r\n\r\n        return cap[0].charAt(0) !== '!'\r\n            ? this.renderer.link(href, title, this.output(cap[1]))\r\n            : this.renderer.image(href, title, escape(cap[1]));\r\n    };\r\n\r\n    /**\r\n     * Smartypants Transformations\r\n     */\r\n\r\n    InlineLexer.prototype.smartypants = function (text) {\r\n        if (!this.options.smartypants) return text;\r\n        return text\r\n            // em-dashes\r\n            .replace(/--/g, '\\u2014')\r\n            // opening singles\r\n            .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n            // closing singles & apostrophes\r\n            .replace(/'/g, '\\u2019')\r\n            // opening doubles\r\n            .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n            // closing doubles\r\n            .replace(/\"/g, '\\u201d')\r\n            // ellipses\r\n            .replace(/\\.{3}/g, '\\u2026');\r\n    };\r\n\r\n    /**\r\n     * Mangle Links\r\n     */\r\n\r\n    InlineLexer.prototype.mangle = function (text) {\r\n        var out = []\r\n            , l = text.length\r\n            , i = 0\r\n            , ch;\r\n\r\n        for (; i < l; i++) {\r\n            ch = text.charCodeAt(i);\r\n            if (Math.random() > 0.5) {\r\n                ch = 'x' + ch.toString(16);\r\n            }\r\n            out.push('&#' + ch + ';');\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    /**\r\n     * Renderer\r\n     */\r\n\r\n    function Renderer(options) {\r\n        this.options = options || {};\r\n    }\r\n\r\n    Renderer.prototype.code = function (code, lang, escaped) {\r\n        if (this.options.highlight) {\r\n            var out = this.options.highlight(code, lang);\r\n            if (out != null && out !== code) {\r\n                escaped = true;\r\n                code = out;\r\n            }\r\n        }\r\n\r\n        if (!lang) {\r\n            return React.DOM.pre(null,\r\n                React.DOM.code({dangerouslySetInnerHTML:{__html:escaped ? code : escape(code, true)}})\r\n            );\r\n        }\r\n        return React.DOM.pre(null,\r\n            React.DOM.code({className:this.options.langPrefix+escape(lang, true),dangerouslySetInnerHTML:{__html:escaped ? code : escape(code, true)}})\r\n        );\r\n    };\r\n\r\n    Renderer.prototype.blockquote = function (quote) {\r\n        return React.DOM.blockquote({children:quote});\r\n    };\r\n\r\n    Renderer.prototype.html = function (html) {\r\n        return React.DOM.div({dangerouslySetInnerHTML:{__html:html}});\r\n    };\r\n\r\n    Renderer.prototype.heading = function (text, level, raw) {\r\n        return React.DOM['h' + level]({children:text, id:this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-')});\r\n    };\r\n\r\n    Renderer.prototype.hr = function () {\r\n        return React.DOM.hr(null);\r\n    };\r\n\r\n    Renderer.prototype.list = function (body, ordered) {\r\n        var type = ordered ? 'ol' : 'ul';\r\n        return React.DOM[type]({childrend:body});\r\n    };\r\n\r\n    Renderer.prototype.listitem = function (text) {\r\n        return React.DOM.li({childrend:text});\r\n    };\r\n\r\n    Renderer.prototype.paragraph = function (text) {\r\n        console.log(text);\r\n        return React.DOM.p(null,text);\r\n    };\r\n\r\n    Renderer.prototype.table = function (header, body) {\r\n        return React.DOM.table(null,\r\n            React.DOM.thead({childrend:header}),\r\n            React.DOM.tbody({childrend:body})\r\n        );\r\n    };\r\n\r\n    Renderer.prototype.tablerow = function (content) {\r\n        return React.DOM.tr({childrend:content});\r\n    };\r\n\r\n    Renderer.prototype.tablecell = function (content, flags) {\r\n        var type = flags.header ? 'th' : 'td';\r\n        var props = {\r\n            childrend:content\r\n        }\r\n        if(flags.align){\r\n            props.style.textAlign = flags.align\r\n        }\r\n\r\n        return React.DOM[type](props);\r\n    };\r\n\r\n// span level renderer\r\n    Renderer.prototype.strong = function (text) {\r\n        return React.DOM.strong(null,text);\r\n    };\r\n\r\n    Renderer.prototype.em = function (text) {\r\n        return React.DOM.em(null,text);\r\n    };\r\n\r\n    Renderer.prototype.codespan = function (text) {\r\n        return React.DOM.code(null,text);\r\n    };\r\n\r\n    Renderer.prototype.br = function () {\r\n        return React.DOM.br(null);\r\n    };\r\n\r\n    Renderer.prototype.del = function (text) {\r\n        return React.DOM.del(null,text);\r\n    };\r\n\r\n    Renderer.prototype.link = function (href, title, text) {\r\n        if (this.options.sanitize) {\r\n            try {\r\n                var prot = decodeURIComponent(unescape(href))\r\n                    .replace(/[^\\w:]/g, '')\r\n                    .toLowerCase();\r\n            } catch (e) {\r\n                return React.DOM.a(null);\r\n            }\r\n            if (prot.indexOf('javascript:') === 0) {\r\n                return React.DOM.a(null);\r\n            }\r\n        }\r\n        return React.DOM.a({href:href,title:title},text);\r\n    };\r\n\r\n    Renderer.prototype.image = function (href, title, text) {\r\n        return React.DOM.img({src:href,title:title,alt:text});\r\n    };\r\n\r\n    /**\r\n     * Parsing & Compiling\r\n     */\r\n\r\n    function Parser(options) {\r\n        this.tokens = [];\r\n        this.token = null;\r\n        this.options = options || marked.defaults;\r\n        this.options.renderer = this.options.renderer || new Renderer;\r\n        this.renderer = this.options.renderer;\r\n        this.renderer.options = this.options;\r\n    }\r\n\r\n    /**\r\n     * Static Parse Method\r\n     */\r\n\r\n    Parser.parse = function (src, options, renderer) {\r\n        var parser = new Parser(options, renderer);\r\n        return parser.parse(src);\r\n    };\r\n\r\n    /**\r\n     * Parse Loop\r\n     */\r\n\r\n    Parser.prototype.parse = function (src) {\r\n        this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n        this.tokens = src.reverse();\r\n\r\n        var out = [];\r\n        while (this.next()) {\r\n            out.push(this.tok());\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    /**\r\n     * Next Token\r\n     */\r\n\r\n    Parser.prototype.next = function () {\r\n        return this.token = this.tokens.pop();\r\n    };\r\n\r\n    /**\r\n     * Preview Next Token\r\n     */\r\n\r\n    Parser.prototype.peek = function () {\r\n        return this.tokens[this.tokens.length - 1] || 0;\r\n    };\r\n\r\n    /**\r\n     * Parse Text Tokens\r\n     */\r\n\r\n    Parser.prototype.parseText = function () {\r\n        var body = this.token.text;\r\n\r\n        console.log(body);\r\n        while (this.peek().type === 'text') {\r\n            body += '\\n' + this.next().text;\r\n        }\r\n\r\n        return this.inline.output(body);\r\n    };\r\n\r\n    /**\r\n     * Parse Current Token\r\n     */\r\n\r\n    Parser.prototype.tok = function () {\r\n        switch (this.token.type) {\r\n            case 'space':\r\n            {\r\n                return '';\r\n            }\r\n            case 'hr':\r\n            {\r\n                return this.renderer.hr();\r\n            }\r\n            case 'heading':\r\n            {\r\n                return this.renderer.heading(\r\n                    this.inline.output(this.token.text),\r\n                    this.token.depth,\r\n                    this.token.text);\r\n            }\r\n            case 'code':\r\n            {\r\n                return this.renderer.code(this.token.text,\r\n                    this.token.lang,\r\n                    this.token.escaped);\r\n            }\r\n            case 'table':\r\n            {\r\n                var header = ''\r\n                    , body = []\r\n                    , i\r\n                    , row\r\n                    , cell\r\n                    , flags\r\n                    , j;\r\n\r\n                // header\r\n                cell = [];\r\n                for (i = 0; i < this.token.header.length; i++) {\r\n                    flags = { header:true, align:this.token.align[i] };\r\n                    cell.push(this.renderer.tablecell(\r\n                        this.inline.output(this.token.header[i]),\r\n                        { header:true, align:this.token.align[i] }\r\n                    ));\r\n                }\r\n                header.push(this.renderer.tablerow(cell));\r\n\r\n                for (i = 0; i < this.token.cells.length; i++) {\r\n                    row = this.token.cells[i];\r\n\r\n                    cell = '';\r\n                    for (j = 0; j < row.length; j++) {\r\n                        cell.push(this.renderer.tablecell(\r\n                            this.inline.output(row[j]),\r\n                            { header:false, align:this.token.align[j] }\r\n                        ));\r\n                    }\r\n\r\n                    body.push(this.renderer.tablerow(cell));\r\n                }\r\n                return this.renderer.table(header, body);\r\n            }\r\n            case 'blockquote_start':\r\n            {\r\n                var body = [];\r\n\r\n                while (this.next().type !== 'blockquote_end') {\r\n                    body.push(this.tok());\r\n                }\r\n\r\n                return this.renderer.blockquote(body);\r\n            }\r\n            case 'list_start':\r\n            {\r\n                var body = []\r\n                    , ordered = this.token.ordered;\r\n\r\n                while (this.next().type !== 'list_end') {\r\n                    body.push(this.tok());\r\n                }\r\n\r\n                return this.renderer.list(body, ordered);\r\n            }\r\n            case 'list_item_start':\r\n            {\r\n                var body = [];\r\n\r\n                while (this.next().type !== 'list_item_end') {\r\n                    body.push(this.token.type === 'text'\r\n                        ? this.parseText()\r\n                        : this.tok()\r\n                    );\r\n                }\r\n\r\n                return this.renderer.listitem(body);\r\n            }\r\n            case 'loose_item_start':\r\n            {\r\n                var body = [];\r\n\r\n                while (this.next().type !== 'list_item_end') {\r\n                    body.push(this.tok());\r\n                }\r\n\r\n                return this.renderer.listitem(body);\r\n            }\r\n            case 'html':\r\n            {\r\n                var html = !this.token.pre && !this.options.pedantic\r\n                    ? this.inline.output(this.token.text)\r\n                    : this.token.text;\r\n                return this.renderer.html(html);\r\n            }\r\n            case 'paragraph':\r\n            {\r\n                return this.renderer.paragraph(this.inline.output(this.token.text));\r\n            }\r\n            case 'text':\r\n            {\r\n                return this.renderer.paragraph(this.parseText());\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Helpers\r\n     */\r\n\r\n    function escape(html, encode) {\r\n        return html\r\n            .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#39;');\r\n    }\r\n\r\n    function unescape(html) {\r\n        return html.replace(/&([#\\w]+);/g, function (_, n) {\r\n            n = n.toLowerCase();\r\n            if (n === 'colon') return ':';\r\n            if (n.charAt(0) === '#') {\r\n                return n.charAt(1) === 'x'\r\n                    ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n                    : String.fromCharCode(+n.substring(1));\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n\r\n    function replace(regex, opt) {\r\n        regex = regex.source;\r\n        opt = opt || '';\r\n        return function self(name, val) {\r\n            if (!name) return new RegExp(regex, opt);\r\n            val = val.source || val;\r\n            val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n            regex = regex.replace(name, val);\r\n            return self;\r\n        };\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    noop.exec = noop;\r\n\r\n    function merge(obj) {\r\n        var i = 1\r\n            , target\r\n            , key;\r\n\r\n        for (; i < arguments.length; i++) {\r\n            target = arguments[i];\r\n            for (key in target) {\r\n                if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n                    obj[key] = target[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n\r\n    /**\r\n     * Marked\r\n     */\r\n\r\n    function marked(src, opt, callback) {\r\n        if (callback || typeof opt === 'function') {\r\n            if (!callback) {\r\n                callback = opt;\r\n                opt = null;\r\n            }\r\n\r\n            opt = merge({}, marked.defaults, opt || {});\r\n\r\n            var highlight = opt.highlight\r\n                , tokens\r\n                , pending\r\n                , i = 0;\r\n\r\n            try {\r\n                tokens = Lexer.lex(src, opt)\r\n            } catch (e) {\r\n                return callback(e);\r\n            }\r\n\r\n            pending = tokens.length;\r\n\r\n            var done = function () {\r\n                var out, err;\r\n\r\n                try {\r\n                    out = Parser.parse(tokens, opt);\r\n                } catch (e) {\r\n                    err = e;\r\n                }\r\n\r\n                opt.highlight = highlight;\r\n\r\n                return err\r\n                    ? callback(err)\r\n                    : callback(null, out);\r\n            };\r\n\r\n            if (!highlight || highlight.length < 3) {\r\n                return done();\r\n            }\r\n\r\n            delete opt.highlight;\r\n\r\n            if (!pending) return done();\r\n\r\n            for (; i < tokens.length; i++) {\r\n                (function (token) {\r\n                    if (token.type !== 'code') {\r\n                        return --pending || done();\r\n                    }\r\n                    return highlight(token.text, token.lang, function (err, code) {\r\n                        if (code == null || code === token.text) {\r\n                            return --pending || done();\r\n                        }\r\n                        token.text = code;\r\n                        token.escaped = true;\r\n                        --pending || done();\r\n                    });\r\n                })(tokens[i]);\r\n            }\r\n\r\n            return;\r\n        }\r\n        try {\r\n            if (opt) opt = merge({}, marked.defaults, opt);\r\n            return Parser.parse(Lexer.lex(src, opt), opt);\r\n        } catch (e) {\r\n            e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n            if ((opt || marked.defaults).silent) {\r\n                return '<p>An error occured:</p><pre>'\r\n                    + escape(e.message + '', true)\r\n                    + '</pre>';\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Options\r\n     */\r\n\r\n    marked.options =\r\n        marked.setOptions = function (opt) {\r\n            merge(marked.defaults, opt);\r\n            return marked;\r\n        };\r\n\r\n    marked.defaults = {\r\n        gfm:true,\r\n        tables:true,\r\n        breaks:false,\r\n        pedantic:false,\r\n        sanitize:false,\r\n        smartLists:false,\r\n        silent:false,\r\n        highlight:null,\r\n        langPrefix:'lang-',\r\n        smartypants:false,\r\n        headerPrefix:'',\r\n        renderer:new Renderer\r\n    };\r\n\r\n    /**\r\n     * Expose\r\n     */\r\n\r\n    marked.Parser = Parser;\r\n    marked.parser = Parser.parse;\r\n\r\n    marked.Renderer = Renderer;\r\n\r\n    marked.Lexer = Lexer;\r\n    marked.lexer = Lexer.lex;\r\n\r\n    marked.InlineLexer = InlineLexer;\r\n    marked.inlineLexer = InlineLexer.output;\r\n\r\n    marked.parse = marked;\r\n\r\n    if (typeof exports === 'object') {\r\n        module.exports = marked;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return marked;\r\n        });\r\n    } else {\r\n        this.marked = marked;\r\n    }\r\n\r\n}).call(function () {\r\n    return this || (typeof window !== 'undefined' ? window : global);\r\n}());\r\n"]},"metadata":{},"sourceType":"script"}