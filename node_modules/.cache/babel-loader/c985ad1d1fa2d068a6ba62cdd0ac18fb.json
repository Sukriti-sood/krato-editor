{"ast":null,"code":"var _jsxFileName = \"/home/sukriti/Desktop/krato-editor/src/App.js\";\nimport React, { useState } from 'react';\nimport Preview from \"./component/Preview\";\nimport Toolbar from \"./component/Toolbar\";\nimport Editor from \"./component/Editor\";\nimport placeholder from \"./component/plac\";\n\nfunction App() {\n  const [markdown, setMarkdow] = useState(placeholder);\n  const [editorMaximized, setmaximize] = useState(false);\n  const [previewMaximize, setpreviewmax] = useState(false);\n\n  function handleChange(e) {\n    setMarkdow(e.target.value);\n  }\n\n  function handleEditorMaximize() {\n    setmaximize(!editorMaximized);\n  }\n\n  function handlePreviewMaximize() {\n    setpreviewmax(!previewMaximize);\n  }\n\n  const classes = editorMaximized ? ['editorWrap maximized', 'previewWrap hide', 'fa fa-compress'] : previewMaximize ? ['editorWrap hide', 'previewWrap maximized', 'fa fa-compress'] : ['editorWrap', 'previewWrap', 'fa fa-arrows-alt'];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    icon: classes[2],\n    onClick: handleEditorMaximize,\n    text: \"Editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Editor, {\n    markdown: markdown,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    icon: classes[2],\n    onClick: handlePreviewMaximize,\n    text: \"Previewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Preview, {\n    markdown: markdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sukriti/Desktop/krato-editor/src/App.js"],"names":["React","useState","Preview","Toolbar","Editor","placeholder","App","markdown","setMarkdow","editorMaximized","setmaximize","previewMaximize","setpreviewmax","handleChange","e","target","value","handleEditorMaximize","handlePreviewMaximize","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,SAASC,GAAT,GAAe;AAEf,QAAK,CAACC,QAAD,EAAUC,UAAV,IAAsBP,QAAQ,CAACI,WAAD,CAAnC;AACA,QAAK,CAACI,eAAD,EAAiBC,WAAjB,IAA8BT,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAK,CAACU,eAAD,EAAiBC,aAAjB,IAAgCX,QAAQ,CAAC,KAAD,CAA7C;;AAEA,WAASY,YAAT,CAAsBC,CAAtB,EAAwB;AACtBN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;;AACD,WAASC,oBAAT,GAA+B;AAC7BP,IAAAA,WAAW,CAAC,CAACD,eAAF,CAAX;AACD;;AACD,WAASS,qBAAT,GAAgC;AAC9BN,IAAAA,aAAa,CAAC,CAACD,eAAF,CAAb;AACD;;AAED,QAAMQ,OAAO,GAACV,eAAe,GAAC,CAAC,sBAAD,EAAyB,kBAAzB,EAA6C,gBAA7C,CAAD,GAC5BE,eAAe,GAAC,CAAC,iBAAD,EAAoB,uBAApB,EAA6C,gBAA7C,CAAD,GACF,CAAC,YAAD,EAAe,aAAf,EAA8B,kBAA9B,CAFd;AAIE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,OAAO,CAAC,CAAD,CADf;AAEE,IAAA,OAAO,EAAEF,oBAFX;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,eAMM,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEV,QAAlB;AAA4B,IAAA,QAAQ,EAAEM,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,CADA,eASI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAK,IAAA,SAAS,EAAEM,OAAO,CAAC,CAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,OAAO,CAAC,CAAD,CADf;AAEE,IAAA,OAAO,EAAED,qBAFX;AAGE,IAAA,IAAI,EAAC,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEX,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAVJ,CADF;AAqBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Preview from \"./component/Preview\";\nimport Toolbar from \"./component/Toolbar\";\nimport Editor from \"./component/Editor\";\nimport placeholder from \"./component/plac\";\n\nfunction App() {\n\nconst[markdown,setMarkdow]=useState(placeholder);\nconst[editorMaximized,setmaximize]=useState(false);\nconst[previewMaximize,setpreviewmax]=useState(false);\n\nfunction handleChange(e){\n  setMarkdow(e.target.value);\n}\nfunction handleEditorMaximize(){\n  setmaximize(!editorMaximized);\n}\nfunction handlePreviewMaximize(){\n  setpreviewmax(!previewMaximize);\n}\n\nconst classes=editorMaximized?['editorWrap maximized', 'previewWrap hide', 'fa fa-compress']\n:previewMaximize?['editorWrap hide', 'previewWrap maximized', 'fa fa-compress']\n             :['editorWrap', 'previewWrap', 'fa fa-arrows-alt'];\n\n  return (\n    <div >\n    <div className={classes[0]}>\n          <Toolbar\n            icon={classes[2]}\n            onClick={handleEditorMaximize}\n            text='Editor'\n          />\n          <Editor markdown={markdown} onChange={handleChange} />\n        </div>\n        <div className='converter' />\n        <div className={classes[1]}>\n          <Toolbar\n            icon={classes[2]}\n            onClick={handlePreviewMaximize}\n            text='Previewer'\n          />\n          <Preview markdown={markdown} />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}